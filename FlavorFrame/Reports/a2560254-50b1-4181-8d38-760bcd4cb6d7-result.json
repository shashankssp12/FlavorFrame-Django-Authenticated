{"name": "testCreateRecipe", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"Rname\"]\"}\n  (Session info: chrome=120.0.6099.227); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF62B152142+3514994]\n\t(No symbol) [0x00007FF62AD70CE2]\n\t(No symbol) [0x00007FF62AC176AA]\n\t(No symbol) [0x00007FF62AC61860]\n\t(No symbol) [0x00007FF62AC6197C]\n\t(No symbol) [0x00007FF62ACA4EE7]\n\t(No symbol) [0x00007FF62AC8602F]\n\t(No symbol) [0x00007FF62ACA28F6]\n\t(No symbol) [0x00007FF62AC85D93]\n\t(No symbol) [0x00007FF62AC54BDC]\n\t(No symbol) [0x00007FF62AC55C64]\n\tGetHandleVerifier [0x00007FF62B17E16B+3695259]\n\tGetHandleVerifier [0x00007FF62B1D6737+4057191]\n\tGetHandleVerifier [0x00007FF62B1CE4E3+4023827]\n\tGetHandleVerifier [0x00007FF62AEA04F9+689705]\n\t(No symbol) [0x00007FF62AD7C048]\n\t(No symbol) [0x00007FF62AD78044]\n\t(No symbol) [0x00007FF62AD781C9]\n\t(No symbol) [0x00007FF62AD688C4]\n\tBaseThreadInitThunk [0x00007FF98564257D+29]\n\tRtlUserThreadStart [0x00007FF985AAAA58+40]", "trace": "self = <VEG_REC.tests.testRecipe testMethod=testCreateRecipe>\n\n    def testCreateRecipe(self):\n        selenium = self.selenium\n        selenium.get('http://127.0.0.1:8000/recipes')\n        # time.sleep(2)\n        recipe_lists=[]\n        for name, description, imgPath in zip(recipe_names, recipe_descriptions, recipe_images):\n            recipe_lists.append(Recipe1(name, description, imgPath))\n    \n    \n        for i in range(0, len(recipe_lists)):\n>           Rname=selenium.find_element(by=By.NAME, value=\"Rname\")\n\ntests.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000026B14296D10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF62AD688C4]\\\\n\\\\tBaseThreadInitThunk [0x00007FF98564257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF985AAAA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"Rname\"]\"}\nE         (Session info: chrome=120.0.6099.227); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF62B152142+3514994]\nE       \t(No symbol) [0x00007FF62AD70CE2]\nE       \t(No symbol) [0x00007FF62AC176AA]\nE       \t(No symbol) [0x00007FF62AC61860]\nE       \t(No symbol) [0x00007FF62AC6197C]\nE       \t(No symbol) [0x00007FF62ACA4EE7]\nE       \t(No symbol) [0x00007FF62AC8602F]\nE       \t(No symbol) [0x00007FF62ACA28F6]\nE       \t(No symbol) [0x00007FF62AC85D93]\nE       \t(No symbol) [0x00007FF62AC54BDC]\nE       \t(No symbol) [0x00007FF62AC55C64]\nE       \tGetHandleVerifier [0x00007FF62B17E16B+3695259]\nE       \tGetHandleVerifier [0x00007FF62B1D6737+4057191]\nE       \tGetHandleVerifier [0x00007FF62B1CE4E3+4023827]\nE       \tGetHandleVerifier [0x00007FF62AEA04F9+689705]\nE       \t(No symbol) [0x00007FF62AD7C048]\nE       \t(No symbol) [0x00007FF62AD78044]\nE       \t(No symbol) [0x00007FF62AD781C9]\nE       \t(No symbol) [0x00007FF62AD688C4]\nE       \tBaseThreadInitThunk [0x00007FF98564257D+29]\nE       \tRtlUserThreadStart [0x00007FF985AAAA58+40]\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1706382913187, "stop": 1706382914818, "uuid": "988bdf5f-04f6-4fb4-8e0f-6df5bd05aa40", "historyId": "9703b05535b94063e97762b158772403", "testCaseId": "9703b05535b94063e97762b158772403", "fullName": "tests.testRecipe#testCreateRecipe", "labels": [{"name": "suite", "value": "tests"}, {"name": "subSuite", "value": "testRecipe"}, {"name": "host", "value": "LAPTOP-85C54M6J"}, {"name": "thread", "value": "11184-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests"}]}